name: Build Windows Tauri App and Upload Artifact

on:
  workflow_dispatch: # Manual trigger only

jobs:
  build-and-upload:
    runs-on: windows-latest

    env:
      APP_URL: ${{ secrets.APP_URL }}
      APP_TITLE: ${{ secrets.APP_TITLE }}
      WINDOW_WIDTH: ${{ secrets.WINDOW_WIDTH }}
      WINDOW_HEIGHT: ${{ secrets.WINDOW_HEIGHT }}
      WINDOW_X: ${{ secrets.WINDOW_X }}
      WINDOW_Y: ${{ secrets.WINDOW_Y }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Rust & Tauri CLI
      run: |
        rustup update stable
        rustup default stable
        rustup target add x86_64-pc-windows-msvc
        cargo install tauri-cli

    - name: Create Tauri App Structure
      run: |
        mkdir tauri-app
        cd tauri-app
        cargo init --bin

    - name: Create src/main.rs
      run: |
        Set-Content -Path tauri-app\src\main.rs -Value @"
fn main() {
    tauri::Builder::default()
        .setup(|app| {
            tauri::WindowBuilder::new(
                app,
                \"main\",
                tauri::WindowUrl::External(\"${{ env.APP_URL }}\".parse().unwrap())
            )
            .title(\"${{ env.APP_TITLE }}\")
            .inner_size(${{ env.WINDOW_WIDTH }}.parse().unwrap(), ${{ env.WINDOW_HEIGHT }}.parse().unwrap())
            .position(${{ env.WINDOW_X }}.parse().unwrap(), ${{ env.WINDOW_Y }}.parse().unwrap())
            .build()?;
            Ok(())
        })
        .run(tauri::generate_context!())
        .expect(\"error while running tauri application\");
}
"@

    - name: Create Cargo.toml
      run: |
        Set-Content -Path tauri-app\Cargo.toml -Value @"
[package]
name = \"tauri-app\"
version = \"0.1.0\"
edition = \"2021\"

[dependencies]
tauri = { version = \"1\", features = [\"api-all\"] }

[lib]
crate-type = [\"cdylib\"]

[[bin]]
name = \"tauri-app\"
path = \"src/main.rs\"
"@

    - name: Create .cargo/config.toml
      run: |
        mkdir tauri-app\.cargo
        Set-Content -Path tauri-app\.cargo\config.toml -Value @"
[target.'cfg(windows)']
rustflags = [\"-C\", \"link-args=/SUBSYSTEM:WINDOWS\"]
"@

    - name: Create tauri.conf.json
      run: |
        mkdir tauri-app\src-tauri
        Set-Content -Path tauri-app\src-tauri\tauri.conf.json -Value @"
{
  \"package\": {
    \"productName\": \"TauriApp\",
    \"version\": \"0.1.0\"
  },
  \"tauri\": {
    \"windows\": [
      {
        \"title\": \"${{ env.APP_TITLE }}\",
        \"width\": ${{ env.WINDOW_WIDTH }},
        \"height\": ${{ env.WINDOW_HEIGHT }},
        \"x\": ${{ env.WINDOW_X }},
        \"y\": ${{ env.WINDOW_Y }},
        \"url\": \"${{ env.APP_URL }}\"
      }
    ]
  }
}
"@

    - name: Build Windows EXE
      run: |
        cd tauri-app
        cargo tauri build --bundles none

    - name: Upload EXE as GitHub Artifact
      uses: actions/upload-artifact@v4
      with:
        name: tauri-app-windows
        path: tauri-app\src-tauri\target\release\tauri-app.exe
